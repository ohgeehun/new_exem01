<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="sch">
	<typeAlias alias="SchBean" 
			   type="com.exem9.lms.web.schedule.bean.SchBean" />	
	
	<resultMap class="SchBean" id="SchMap">
		<result property="schId" column="support_id"/>
		<result property="schCusId" column="customer_id"/>
		<result property="schCusNm" column="customer_name"/>
		<result property="schPjtId" column="project_id"/>
		<result property="schPjtNm" column="project_name"/>
		
		<result property="user_id" column="user_id"/>
		<result property="user_name" column="user_name"/>
		<result property="team_id" column="team_id"/>
		<result property="team_name" column="team_name"/>
		<result property="dbms_id" column="dbms_id"/>
		<result property="dbms_name" column="dbms_name"/>
		<result property="category_id" column="category_id"/>
		<result property="category_name" column="category_name"/>
		<result property="start_time" column="start_time"/>
		<result property="end_time" column="end_time"/>
		<result property="contents" column="contents"/>
	</resultMap>

	<select id="getsch" resultMap="SchMap">
	SELECT s.support_id, 
      s.user_id, m.user_name,
      s.team_id, t.team_name,
      s.customer_id, c.customer_name,
      s.project_id, p.project_name,
      s.dbms_id, d.dbms_name,
      s.category_id, ca.category_name,
       s.start_time, s.end_time, s.contents
  FROM xm_support_history s
	left outer join xm_member m on s.user_id = m.user_id
	left outer join xm_team t on s.team_id = t.team_id
	left outer join 
	( 
	   select customer_id, customer_name
	   from xm_customer 
	   group by customer_id, customer_name
	) c on s.customer_id = c.customer_id
	left outer join
	( 
	   select customer_id, project_id, project_name
	   from xm_customer 
	   group by customer_id, project_id, project_name
	) p on s.project_id = p.project_id
	left outer join xm_dbms d on s.dbms_id = d.dbms_id
	left outer join xm_category ca on s.category_id = ca.category_id
	order by s.start_time
	
	<!-- 
	SELECT s.support_id, 
      s.user_id, m.user_name,
      s.team_id, t.team_name,
      s.customer_id, c.customer_name,
      s.project_id, p.project_name,
      s.dbms_id, d.dbms_name,
      s.category_id, ca.category_name,
       s.start_time, s.end_time, s.contents
  FROM xm_support_history s,
	xm_member m,
	xm_team t,
	( 
	   select customer_id, customer_name
	   from xm_customer 
	   group by customer_id, customer_name
	) c,
	( 
	   select customer_id, project_id, project_name
	   from xm_customer 
	   group by customer_id, project_id, project_name
	) p,
	xm_dbms d,
	xm_category ca
  where s.user_id = m.user_id and
	s.team_id = t.team_id and
	s.customer_id = c.customer_id and
	s.project_id = p.project_id and
	s.dbms_id = d.dbms_id and
	s.category_id = ca.category_id
	-->
	</select>  	
	
	
	<!-- 신규 내 일정 인서트 시 -->
	<update id="insertSchinfo" parameterClass="java.util.HashMap">
	 <!-- INSERT INTO XM_MEMBER (
            user_id, user_password, user_name, user_team_id, user_flag, user_dbms_id, 
            user_level, user_department_id, user_phone, user_mail, user_position_id, 
            user_hint, user_point)
    VALUES (#user_id#, #user_password#, #user_name#, #user_team_id#, null, #user_dbms_id#, 
            null, #user_department_id#, #user_phone#, #user_mail#, #user_position_id#, 
            null, #user_point#) 
             
    INSERT INTO xm_support_history(
            user_id, team_id, customer_id, project_id, dbms_id, category_id, 
            start_time, end_time, contents)
    VALUES ( 'p', 1, 3, 5, 8, 2, 
            now(), now(), '고객사 예방2')
    -->        
    <!--         
    INSERT INTO xm_support_history(
            user_id, team_id, customer_id, project_id, dbms_id, category_id, 
            start_time, end_time, contents)
    VALUES ( #user_id#, 
    		8, 
    		#customer_id#, #project_id#, #dbms_id#, #category_id#, 
            now(), now(), #contents#)
    
	  
	INSERT INTO xm_support_history(
            user_id, team_id, customer_id, project_id, dbms_id, category_id, 
            start_time, end_time, contents)
    VALUES ( #user_id#, 1, 3, 5, 8, 2, 
            now(), now(), #contents#)
            
    -->         
	INSERT INTO xm_support_history(
            user_id, team_id, 
            customer_id, project_id, dbms_id, category_id, 
            start_time, end_time, contents)
    VALUES ( #user_id#, 
    		(select user_team_id from xm_member where lower(user_id) = #user_id# or upper(user_id) = #user_id#), 
    		#customer_id#, #project_id#, #dbms_id#, #category_id#, 
            to_timestamp(#start_time#, 'YYYY-MM-DD HH24:MI:22'), 
            to_timestamp(#end_time#, 'YYYY-MM-DD HH24:MI:22'), 
            #contents#)        
	 </update> 
</sqlMap>